name: Build and Push to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      api: ${{ steps.filter.outputs.api }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Detect Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'api/**'

  build-and-push:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396488201061:role/iic2173-github-actions-ecr-repo-workflows
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: o6g2h0d9
          REPOSITORY: iic2173-api
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG ./api
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

  deploy-to-ec2:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-push]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396488201061:role/iic2173-github-actions-ecr-repo-workflows
          aws-region: us-east-1

      - name: Zip Artifacts to deploy
        run: zip -r deploy.zip scripts/ appspec.yml docker-compose.production.yml

      - name: Zip Artifacts And upload to S3
        run:
          zip -r deploy.zip scripts/ appspec.yml docker-compose.production.yml |
          aws s3 cp deploy.zip s3://iic2173-codedeploy/deploy.zip

      - name: Create Codedeploy Deployment
        id: codedeploy-deploy-trigger
        env:
          DEPLOYMENT_APPLICATION_NAME: iic2173-codedeploy
          DEPLOYMENT_GROUP_NAME: iic2173-deployment-group
          DEPLOYMENT_BUCKET_NAME: iic2173-codedeploy
        # https://stackoverflow.com/questions/66381595/trying-to-parse-json-output-in-a-github-action
        run: |
          deploymentId=$( aws deploy create-deployment \
            --application-name $DEPLOYMENT_APPLICATION_NAME \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$DEPLOYMENT_BUCKET_NAME,key=deploy.zip,bundleType=zip \
            --description "Automatic deployment from github commit ${{github.sha}}" | jq -r '.deploymentId' )
          echo "deploymentId=$deploymentId" >> $GITHUB_OUTPUT

      - name: Wait until deployment is done
        run: aws deploy wait deployment-successful --deployment-id ${{steps.codedeploy-deploy-trigger.outputs.deploymentId}}
